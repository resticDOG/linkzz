<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>取非符号的妙用</title>
    <url>/linkzz/2018/12/28/awesome-false/</url>
    <content><![CDATA[<p>如下代码块：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 字段的验证，支持是否非空、是否是手机号、是否是邮箱地址的判断</span></span><br><span class="line">validate : <span class="function"><span class="keyword">function</span>(<span class="params">value, type</span>)</span>&#123;</span><br><span class="line">    <span class="comment">//需要把前后的空格去掉</span></span><br><span class="line">    <span class="keyword">var</span> value = $.trim(value);</span><br><span class="line">    <span class="comment">// 非空判断</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="string">'require'</span> === type)&#123;</span><br><span class="line">        <span class="comment">// 这里可以将value转换成boolean型</span></span><br><span class="line">        <span class="keyword">return</span> !!value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;经过测试在js中<code>!null</code>、<code>!undefined</code>、<code>!&#39;&#39;</code>输出结果都为<code>true</code>，而任意非空字符串取非均为<code>false</code>。代码中巧妙的利用了这点，先用jquery把传入的参数去掉空格，同时转换成字符串，再进行二次取非操作，这样传入的空字符就会返回boolean型的<code>true</code>,这样函数的返回值也更容易理解，当传入的是空串时返回<code>true</code>。</p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>小技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Hogan渲染html模板加载图片出错</title>
    <url>/linkzz/2019/01/08/hogan-render-img-err/</url>
    <content><![CDATA[<p>在从服务器加载数据并渲染商品列表的时候出现<code>Cannot find module &quot;./&quot;</code>错误，查看返回的json字段信息如下:</p>
<a id="more"></a>

<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"status"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"data"</span>: &#123;</span><br><span class="line">        <span class="attr">"pageNum"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">"pageSize"</span>: <span class="number">10</span>,</span><br><span class="line">        <span class="attr">"size"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">"orderBy"</span>: <span class="string">"price asc"</span>,</span><br><span class="line">        <span class="attr">"startRow"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">"endRow"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">"total"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">"pages"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">"list"</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"id"</span>: <span class="number">26</span>,</span><br><span class="line">                <span class="attr">"categoryId"</span>: <span class="number">100002</span>,</span><br><span class="line">                <span class="attr">"name"</span>: <span class="string">"Apple iPhone 7 Plus (A1661) 128G 玫瑰金色 移动联通电信4G手机"</span>,</span><br><span class="line">                <span class="attr">"subtitle"</span>: <span class="string">"iPhone 7，现更以红色呈现。"</span>,</span><br><span class="line">                <span class="attr">"mainImage"</span>: <span class="string">"241997c4-9e62-4824-b7f0-7425c3c28917.jpeg"</span>,</span><br><span class="line">                <span class="attr">"price"</span>: <span class="number">6999</span>,</span><br><span class="line">                <span class="attr">"status"</span>: <span class="number">1</span>,</span><br><span class="line">                <span class="attr">"imageHost"</span>: <span class="string">"//img.shashamall.com/"</span></span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"firstPage"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">"prePage"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">"nextPage"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">"lastPage"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">"isFirstPage"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">"isLastPage"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">"hasPreviousPage"</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">"hasNextPage"</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">"navigatePages"</span>: <span class="number">8</span>,</span><br><span class="line">        <span class="attr">"navigatepageNums"</span>: [</span><br><span class="line">            <span class="number">1</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>HTML模板的string文件如下：<br></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;&#123;#list&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"p-item"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"p-img-con"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"./detail.html?productId=&#123;&#123;id&#125;&#125;"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"link"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">'&#123;&#123;imageHost&#125;&#125;&#123;&#123;mainImage&#125;&#125;'</span> <span class="attr">alt</span>=<span class="string">"&#123;&#123;name&#125;&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"p-price-con"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"p-price"</span>&gt;</span>￥&#123;&#123;price&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"p-name-con"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"./detail.html?productId=&#123;&#123;id&#125;&#125;"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">class</span>=<span class="string">"p-name"</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">&#123;&#123;/list&#125;&#125;</span><br></pre></td></tr></table></figure>
<p>页面传参如下：<br></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 调用service层</span></span><br><span class="line">_product.getProducts(listParam, <span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line">    listHtml = _util.renderHtml(templateIndex, &#123;</span><br><span class="line">        list : res.list</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 将渲染成功的html放入容器</span></span><br><span class="line">    $(<span class="string">'.p-list-con'</span>).html(listHtml);</span><br><span class="line">    <span class="comment">// 渲染分页信息</span></span><br><span class="line">    _this.loadPagination(res.pageNum, res.pages);</span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">errMsg</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 错误提示</span></span><br><span class="line">    _util.errorTips(errMsg);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>按道理<code>img</code>标签的<code>src</code>属性应该会解析成<code>//img.shashamall.com/241997c4-9e62-4824-b7f0-7425c3c28917.jpeg</code>，然后这里浏览器解析的时候应该会加上<code>http</code>从而获取图片资源的，可是这里却报错。多番尝试之后在模板src前添加”<code>/</code>“符号解决问题，目前原因并不知道，这里先记录这个错误，后续再查阅资料，也希望知道的大神告知，解我疑惑！</p>
<blockquote>
<p>解决方法：<br>改<code>&lt;img src=&#39;&#39; alt=&quot;&quot;&gt;</code>为<code>&lt;img src=&#39;/&#39; alt=&quot;&quot;&gt;</code></p>
</blockquote>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>hogan</tag>
      </tags>
  </entry>
  <entry>
    <title>记一次被面试官虐的经历</title>
    <url>/linkzz/2020/05/28/interview-20200528/</url>
    <content><![CDATA[<blockquote>
<p>大概还是我太菜了, 今天接到一个电话面试, 面试官随意问了一些很基本的Java面试题. 然鹅, 准备不充分的我被面试官一阵夺命追问, 败下阵来, 在此记录以下这些问题的答案,希望早日将这些知识融会贯通…</p>
</blockquote>
<h2 id="Spring的事务隔离级别和传播行为"><a href="#Spring的事务隔离级别和传播行为" class="headerlink" title="Spring的事务隔离级别和传播行为"></a>Spring的事务隔离级别和传播行为</h2><p>这个问题也是Java面试中的常问题目了,奈何我太菜,平时就一个注解解决问题的我就支支吾吾说出一两.</p>
<a id="more"></a>

<h3 id="隔离级别"><a href="#隔离级别" class="headerlink" title="隔离级别"></a>隔离级别</h3><p><strong>五种隔离级别</strong>, 是基于数据库隔离级别的封装(✔️表示允许,❌表示不允许):</p>
<table>
<thead>
<tr>
<th>隔离级别</th>
<th align="center">脏读</th>
<th align="center">不可重复读</th>
<th align="center">幻读</th>
</tr>
</thead>
<tbody><tr>
<td><strong>默认(Default使用数据库默认的隔离级别)</strong></td>
<td align="center">-</td>
<td align="center">-</td>
<td align="center">-</td>
</tr>
<tr>
<td><strong>未提交读(Read_UnCommited)</strong></td>
<td align="center">✔️</td>
<td align="center">✔️</td>
<td align="center">✔️</td>
</tr>
<tr>
<td><strong>已提交读(Read_Commited)</strong></td>
<td align="center">❌</td>
<td align="center">✔️</td>
<td align="center">✔️</td>
</tr>
<tr>
<td><strong>可重复读(Repeatable_Read)</strong></td>
<td align="center">❌</td>
<td align="center">❌</td>
<td align="center">✔️</td>
</tr>
<tr>
<td><strong>串行化的(Serializable)</strong></td>
<td align="center">❌</td>
<td align="center">❌</td>
<td align="center">❌</td>
</tr>
</tbody></table>
<h3 id="传播行为"><a href="#传播行为" class="headerlink" title="传播行为"></a>传播行为</h3><p><strong>七种传播行为</strong>:</p>
<ul>
<li><p><strong>Propagation.REQUIRED</strong><br>支持当前事务,如果当前存在事务则加入当前事务;如果当前没有事务,则新建一个事务进行.</p>
</li>
<li><p><strong>Propagation.SUPPORTS</strong><br>支持当前事务,如果当前存在事务则加入当前事务,如果当前没有事务,则以非事务方式运行.</p>
</li>
<li><p><strong>Propagation.MANDATORY</strong><br>支持当前事务,如果当前存在事务则加入当前事务,如果当前没有事务则抛出异常.</p>
</li>
<li><p><strong>Propagation.REQUIRES_NEW</strong><br>不支持当前事务,如果当前存在事务,则当前事务挂起, 另起一个新的事务运行,这两个事务是相互独立的,不会相互影响.</p>
</li>
<li><p><strong>Propagation.NOT_SUPPORT</strong><br>不支持当前事务,如果当前存在事务,则当前事务挂起, 自身以非事务方式运行.</p>
</li>
<li><p><strong>Propagation.NEVER</strong><br>不支持当前事务,如果当前存在事务,则抛出异常,如果当前不存在事务,则以非事务方式运行.</p>
</li>
<li><p><strong>Propagation.NESTED</strong><br>嵌套事务, 和requires_new的区别是当前事务的提交依赖于父事务的提交, 若父事务回滚, 则当前事务也会回滚.另外当前方法调用子方法时,子方法的发生异常被捕获了,则只有子方法回滚事务,当前事务仍然可以运行.基于数据库的<strong>SAVEPOINT</strong>技术,若数据库不支持此技术,则会新建一个事务去运行,此时就相当于REQUIRES_NEW.</p>
</li>
</ul>
<h2 id="Spring的-Transactional注解不生效的原因"><a href="#Spring的-Transactional注解不生效的原因" class="headerlink" title="Spring的@Transactional注解不生效的原因"></a>Spring的@Transactional注解不生效的原因</h2><h3 id="1-数据库引擎不支持事务"><a href="#1-数据库引擎不支持事务" class="headerlink" title="1. 数据库引擎不支持事务"></a>1. 数据库引擎不支持事务</h3><p>以MySQL为例, MyISAM引擎不支持事务, 需要InnoDB引擎才支持.</p>
<h3 id="2-当前Bean没有被Spring管理"><a href="#2-当前Bean没有被Spring管理" class="headerlink" title="2. 当前Bean没有被Spring管理"></a>2. 当前Bean没有被Spring管理</h3><p>没有被Spring管理的类,这个类不会被Spring加载,其方法再怎么加注解当然会失效.</p>
<h3 id="3-方法不是public的"><a href="#3-方法不是public的" class="headerlink" title="3. 方法不是public的"></a>3. 方法不是public的</h3><p>Spring官方文档说明@Transactional注解只能作用于<strong>pubilic</strong>方法上</p>
<h3 id="4-自身调用问题"><a href="#4-自身调用问题" class="headerlink" title="4. 自身调用问题"></a>4. 自身调用问题</h3><p>若自身非事务方法调用了一个事务方法,获取一个自身默认传播行为的事务方法调用自身另一个REQUIRES_NEW传播行为的方法,则当前事务会被挂起,导致不生效.</p>
<h3 id="5-数据源未配置transactionManager"><a href="#5-数据源未配置transactionManager" class="headerlink" title="5. 数据源未配置transactionManager"></a>5. 数据源未配置transactionManager</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> PlatformTransactionManager <span class="title">transactionManager</span><span class="params">(DataSource dataSource)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> DataSourceTransactionManager(dataSource);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>需要如上配置</p>
<h3 id="6-调用了不支持事务的方法Propagation-NOT-SUPPORT"><a href="#6-调用了不支持事务的方法Propagation-NOT-SUPPORT" class="headerlink" title="6. 调用了不支持事务的方法Propagation.NOT_SUPPORT"></a>6. 调用了不支持事务的方法Propagation.NOT_SUPPORT</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AServiceImpl</span> <span class="keyword">implements</span> <span class="title">AService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">a</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        b();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span>(propagation = Propagation.NOT_SUPPORTED)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">b</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// do sth</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如上a的事务会被挂起,造成事务不生效.</p>
<h3 id="7-异常被catch-且未抛出异常"><a href="#7-异常被catch-且未抛出异常" class="headerlink" title="7. 异常被catch,且未抛出异常"></a>7. 异常被catch,且未抛出异常</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AServiceImpl</span> <span class="keyword">implements</span> <span class="title">AService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">a</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// do sth</span></span><br><span class="line">        &#125; <span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">            <span class="comment">// not throw exception</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="8-指定异常类型错误"><a href="#8-指定异常类型错误" class="headerlink" title="8. 指定异常类型错误"></a>8. 指定异常类型错误</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AServiceImpl</span> <span class="keyword">implements</span> <span class="title">AService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">a</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// do sth</span></span><br><span class="line">        &#125; <span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">            <span class="comment">// throw new RuntimeException("出现错误"); // 事务生效</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"出现错误"</span>); <span class="comment">// 事务不会生效</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>第一种抛出<code>RuntimeException</code>是可以触发事务的回滚的, 因为Spring默认回滚的事务就是<code>RuntimeException</code>, 第二种<code>Exception</code>就不会生效了,想让其生效必须指定<code>@Transactional(rollbackFor=Exception.class)</code></p>
<blockquote>
<p>注意: rollbackFor仅限<strong>Throwable异常</strong>及其<strong>子类</strong></p>
</blockquote>
<h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><ul>
<li><input disabled="" type="checkbox"> <strong>J.U.C</strong></li>
<li><input disabled="" type="checkbox"> <strong>线程池,并发</strong></li>
<li><input disabled="" type="checkbox"> <strong>数据库锁</strong></li>
</ul>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>面试</tag>
        <tag>Spring</tag>
      </tags>
  </entry>
  <entry>
    <title>拯救你的idea,解决ubuntu下idea字体发虚</title>
    <url>/linkzz/2019/05/03/ubuntu-idea-font/</url>
    <content><![CDATA[<h3 id="idea在ubuntu下的字体表现"><a href="#idea在ubuntu下的字体表现" class="headerlink" title="idea在ubuntu下的字体表现"></a>idea在ubuntu下的字体表现</h3><p>idea这么强大的ide相信大家都有目共睹，但是最近在ubuntu下安装idea之后却发现字体表现还不如windows，要知道windows的字体渲染可是不如linux的，在高分屏下window的字体会出现明显锯齿，而linux就很平滑，虽然这个和idea没关系，因为idea是用java开发的，字体渲染不是用的系统的字体渲染引擎。查阅资料也发现对于idea的字体渲染问题，intelliJ是有优化过的，然而我ubuntu下的idea看起来却是这样的：</p>
<a id="more"></a>
<p><img src="https://i.imgur.com/YkDKWyj.jpg" alt="字体发虚"></p>
<h3 id="idea环境"><a href="#idea环境" class="headerlink" title="idea环境"></a>idea环境</h3><p>我的ubuntu是18.04LTS，屏幕是23寸1920*1080，idea设置如下：<br><img src="https://i.imgur.com/EzED46g.png" alt="主题设置"><br>主题方面选择了idea内部提供的暗色主题Darcula<br>编辑界面主题是在<a href="https://www.riaway.com/" target="_blank" rel="noopener">idea主题样式网站</a>下载的：<br><img src="https://i.imgur.com/3yHaDWq.png" alt="编辑界面主题"><br>英文字体是Adobe开源的source code pro,在<a href="https://github.com/adobe-fonts/source-code-pro" target="_blank" rel="noopener">github仓库</a>中提供下载。中文字体是开源字体<a href="http://wenq.org/wqy2/index.cgi?MicroHei" target="_blank" rel="noopener">文泉驿微米黑</a></p>
<h3 id="更换系统主题"><a href="#更换系统主题" class="headerlink" title="更换系统主题"></a>更换系统主题</h3><p>字体看起来发虚只是在暗色主题中才会发生，所以我们采取曲线救国策略，换用itelliJ亮色主题，<br>然后结合一张暗色背景图来实现暗色主题的效果。<br><img src="https://i.imgur.com/kOYK47F.png" alt="主题"><br>主题选择intellJ<br><img src="https://i.imgur.com/C72WEg4.png" alt="背景图"><br>选择一张背景图设置透明度<br><img src="https://i.imgur.com/eEdwc6X.png" alt="编辑界面主题"><br>编辑界面主题选择一张亮色的主题，字体不变</p>
<h3 id="成果"><a href="#成果" class="headerlink" title="成果"></a>成果</h3><p>完成以上设置之后来看看成果<br><img src="https://i.imgur.com/FA32hdy.jpg" alt="成果"><br>字体看起来平滑多了，好了，安心编码吧 :)</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>IDEA</tag>
        <tag>ubuntu</tag>
        <tag>字体</tag>
      </tags>
  </entry>
</search>
